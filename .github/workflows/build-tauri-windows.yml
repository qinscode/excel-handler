name: Build and Release Tauri App for Windows

on:
  push:
    branches:
      - release
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      # 不需要 Node.js 和 pnpm，因为使用远程网页

      - name: Set version from input or tag
        id: version
        run: |
          if ("${{ github.event.inputs.version }}" -ne "") {
            $version = "${{ github.event.inputs.version }}"
          } elseif ("${{ github.ref }}" -like "refs/tags/v*") {
            $version = "${{ github.ref }}" -replace "refs/tags/v", ""
          } else {
            $version = "0.1.${{ github.run_number }}"
          }
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "Release version: $version"

      - name: Update Tauri config version
        run: |
          $config = Get-Content "src-tauri/tauri.conf.json" | ConvertFrom-Json
          $config.version = "${{ steps.version.outputs.VERSION }}"
          $config | ConvertTo-Json -Depth 10 | Set-Content "src-tauri/tauri.conf.json"

      - name: Update Cargo.toml version
        run: |
          (Get-Content "src-tauri/Cargo.toml") -replace 'version = ".*"', 'version = "${{ steps.version.outputs.VERSION }}"' | Set-Content "src-tauri/Cargo.toml"

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri App
        run: |
          cd src-tauri
          cargo tauri build --target x86_64-pc-windows-msvc

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.version.outputs.VERSION }}"
          name: "Excel Handler v${{ steps.version.outputs.VERSION }}"
          body: |
            ## What's Changed
            - Windows installer (.msi) available for download
            - Portable executable (.exe) available for download
            
            ## Installation
            1. Download the `.msi` file for automatic installation
            2. Or download the `.exe` file for portable usage
            
            ## System Requirements
            - Windows 10 or later
            - x64 architecture
          draft: false
          prerelease: false
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

  # 可选：添加多平台构建
  build-multi-platform:
    if: false  # 设置为 true 启用多平台构建
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: '--target x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      # 不需要前端依赖安装，因为使用远程网页

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        with:
          args: ${{ matrix.args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}